import tkinter as tk
from tkinter import messagebox
from tkinter import ttk
import joblib

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞
model_package = joblib.load('model.pth')
models = model_package['models']
vectorizer = model_package['vectorizer']
categories = model_package['categories']

def predict_category():
    user_input = comment_text.get("1.0", tk.END).strip()
    if not user_input:
        messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.")
        return
    comment_tok = ' '.join(user_input.lower().split())
    comment_vec = vectorizer.transform([comment_tok])
    predicted_probs = {}
    for category in categories:
        model = models.get(category)
        if model:
            proba = model.predict_proba(comment_vec)[0][1]
            predicted_probs[category] = proba
    if predicted_probs:
        predicted_category = max(predicted_probs, key=predicted_probs.get)
        confidence = predicted_probs[predicted_category]
        result_text = f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n{user_input}\n\n" \
                      f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {predicted_category}\n" \
                      f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f}"
        result_text_widget.config(state='normal')
        result_text_widget.delete("1.0", tk.END)
        result_text_widget.insert(tk.END, result_text)
        result_text_widget.config(state='disabled')
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ–Ω–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞
        root.update()
        root.minsize(root.winfo_width(), root.winfo_height())
    else:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.")

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å –±–æ–ª—å—à–∏–º —Ä–∞–∑–º–µ—Ä–æ–º
root = tk.Tk()
root.title("AI –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä")
root.geometry("1000x800")  # –£–≤–µ–ª–∏—á–∏–ª–∏ —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞
root.configure(bg="#222831")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
title_label = tk.Label(root, text="üß† AI –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä", font=("Helvetica Neue", 28, "bold"), bg="#222831", fg="#00FFCC")
title_label.pack(pady=20)

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
instruction_label = tk.Label(root, text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å'", font=("Helvetica Neue", 18), bg="#222831", fg="#EEEEEE")
instruction_label.pack(pady=10)

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞
input_frame = tk.Frame(root, bg="#393E46", bd=2, relief=tk.RIDGE)
input_frame.pack(padx=20, pady=10, fill=tk.BOTH, expand=True)

input_label = tk.Label(input_frame, text="–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", font=("Helvetica Neue", 16), bg="#393E46", fg="#00FFCC")
input_label.pack(anchor='nw', padx=10, pady=5)

comment_text = tk.Text(input_frame, height=12, font=("Helvetica Neue", 16), wrap=tk.WORD, bg="#EEEEEE", fg="#222831", bd=0, highlightthickness=0)
comment_text.pack(padx=10, pady=5, fill=tk.BOTH, expand=True)

# –°—Ç–∏–ª—å –¥–ª—è –∫–Ω–æ–ø–∫–∏
style = ttk.Style()
style.theme_use('clam')
style.configure('TButton',
                font=('Helvetica Neue', 18, 'bold'),
                background='#00FFCC',
                foreground='#222831',
                padding=12)
style.map('TButton',
          background=[('active', '#00C8B4')],
          foreground=[('active', '#222831')])

# –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
predict_button = ttk.Button(root, text="üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", command=predict_category)
predict_button.pack(pady=20)

# –û–±–ª–∞—Å—Ç—å –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
result_container = tk.Frame(root, bg="#393E46")
result_container.pack(padx=20, pady=10, fill=tk.BOTH, expand=True)

# –°–∫—Ä–æ–ª–ª–±–∞—Ä
scrollbar = tk.Scrollbar(result_container)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

# –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
result_text_widget = tk.Text(result_container, height=10, font=("Helvetica Neue", 16), bg="#222831", fg="#00FFCC", wrap=tk.WORD, state='disabled', yscrollcommand=scrollbar.set)
result_text_widget.pack(padx=10, pady=10, fill=tk.BOTH, expand=True)

scrollbar.config(command=result_text_widget.yview)

# –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
root.mainloop()